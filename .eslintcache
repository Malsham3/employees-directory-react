[{"/Users/malshammary/code/homework/employees-directory-react/src/index.js":"1","/Users/malshammary/code/homework/employees-directory-react/src/App.js":"2","/Users/malshammary/code/homework/employees-directory-react/src/components/Container.js":"3","/Users/malshammary/code/homework/employees-directory-react/src/components/List.js":"4","/Users/malshammary/code/homework/employees-directory-react/src/pages/Home.js":"5"},{"size":193,"mtime":1610603238574,"results":"6","hashOfConfig":"7"},{"size":263,"mtime":1610863261424,"results":"8","hashOfConfig":"7"},{"size":186,"mtime":1610604574788,"results":"9","hashOfConfig":"7"},{"size":1021,"mtime":1610863066470,"results":"10","hashOfConfig":"7"},{"size":1868,"mtime":1610863217309,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1lzsvvf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/malshammary/code/homework/employees-directory-react/src/index.js",[],["24","25"],"/Users/malshammary/code/homework/employees-directory-react/src/App.js",[],"/Users/malshammary/code/homework/employees-directory-react/src/components/Container.js",[],"/Users/malshammary/code/homework/employees-directory-react/src/components/List.js",["26","27"],"import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nfunction List({ list, sortbyName }) {\n  return (\n    <Table striped bordered hover>\n      \n      <thead className = \"text-center\">\n        <tr>\n          <th>Photo</th>\n          <th>\n            <a onClick={sortbyName}>Full Name</a>\n          </th>\n          <th>Email</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {list.map(({ picture, name, email, phone, id }) => (\n          <tr key={id.value} className = \"text-center\">\n            <td>\n              <img\n                src={picture.large}\n                alt={`${name.first}'s profile picture`}\n              />\n            </td>\n            <td>\n              {name.first} {name.last}\n            </td>\n            <td>\n              <a href={\"mailto:\" + email} target=\"__blank\">\n                {email}\n              </a>\n            </td>\n            <td>{phone}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default List;\n","/Users/malshammary/code/homework/employees-directory-react/src/pages/Home.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":12,"column":13,"nodeType":"34","endLine":12,"endColumn":37},{"ruleId":"35","severity":1,"message":"36","line":23,"column":15,"nodeType":"34","endLine":26,"endColumn":17},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]