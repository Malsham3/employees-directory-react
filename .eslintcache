[{"/Users/malshammary/code/homework/employees-directory-react/src/index.js":"1","/Users/malshammary/code/homework/employees-directory-react/src/App.js":"2","/Users/malshammary/code/homework/employees-directory-react/src/components/Container.js":"3","/Users/malshammary/code/homework/employees-directory-react/src/components/List.js":"4","/Users/malshammary/code/homework/employees-directory-react/src/components/Header/Header.js":"5","/Users/malshammary/code/homework/employees-directory-react/src/components/Content/EmployeeCard.js":"6","/Users/malshammary/code/homework/employees-directory-react/src/pages/Foo.js":"7","/Users/malshammary/code/homework/employees-directory-react/src/pages/Home.js":"8"},{"size":216,"mtime":1619126777727,"results":"9","hashOfConfig":"10"},{"size":242,"mtime":1619559712385,"results":"11","hashOfConfig":"10"},{"size":186,"mtime":1610604574788,"results":"12","hashOfConfig":"10"},{"size":1004,"mtime":1610866091208,"results":"13","hashOfConfig":"10"},{"size":660,"mtime":1619559513054,"results":"14","hashOfConfig":"10"},{"size":1259,"mtime":1619556480314,"results":"15","hashOfConfig":"10"},{"size":1877,"mtime":1619559619751,"results":"16","hashOfConfig":"10"},{"size":1397,"mtime":1619559726210,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1lzsvvf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/malshammary/code/homework/employees-directory-react/src/index.js",[],["36","37"],"/Users/malshammary/code/homework/employees-directory-react/src/App.js",["38","39"],"/Users/malshammary/code/homework/employees-directory-react/src/components/Container.js",[],"/Users/malshammary/code/homework/employees-directory-react/src/components/List.js",["40","41"],"import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nfunction List({ list, sortbyName }) {\n  return (\n    <Table striped bordered hover>\n      \n      <thead className = \"text-center\">\n        <tr>\n          <th>Photo</th>\n          <th>\n            <a onClick={sortbyName}>Full Name</a>\n          </th>\n          <th>Email</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {list.map(({ picture, name, email, phone, id }) => (\n          <tr key={id.value} className = \"text-center\">\n            <td>\n              <img\n                src={picture.large}\n                alt= \"profile picture\"\n              />\n            </td>\n            <td>\n              {name.first} {name.last}\n            </td>\n            <td>\n              <a href={\"mailto:\" + email} target=\"__blank\">\n                {email}\n              </a>\n            </td>\n            <td>{phone}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default List;\n","/Users/malshammary/code/homework/employees-directory-react/src/components/Header/Header.js",[],"/Users/malshammary/code/homework/employees-directory-react/src/components/Content/EmployeeCard.js",[],"/Users/malshammary/code/homework/employees-directory-react/src/pages/Foo.js",[],"/Users/malshammary/code/homework/employees-directory-react/src/pages/Home.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":17},{"ruleId":"46","severity":1,"message":"50","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":11},{"ruleId":"51","severity":1,"message":"52","line":12,"column":13,"nodeType":"53","endLine":12,"endColumn":37},{"ruleId":"54","severity":1,"message":"55","line":23,"column":15,"nodeType":"53","endLine":26,"endColumn":17},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Foo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]